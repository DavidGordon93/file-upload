{
	"variables": [],
	"info": {
		"name": "File Upload Consumer Driven Contract Tests",
		"_postman_id": "41e1e5cd-f9fd-cc72-adf4-41e6bfd96e3c",
		"description": "File Upload - Consumer Driven Contract Tests\n\nMake sure you attach a new file with every test as there is a bug with Postman - it looks as though a file is attached but it isn't\n\nNeed to get ClamAV installed to ensure virus scan works",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Happy Path",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/pdf\",\n        \"image/jpeg\",\n        \"text/xml\",\n        \"text/csv\",\n        \"application/xml\",\n        \"application/vnd.ms-excel\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File (front-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Yuan",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"type": "file",
									"src": "FileUpload_Smoke_Tests_QA.postman_collection.json"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve File Metadata (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code description is OK\"] = responseCode.name.has(\"OK\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}/files/{{fileId}}/metadata",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Submit File Routing request (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"tests[\"Check location header contains resource URL\"] = locationHeader !== null",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"TEST\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check Env Status is CLOSED\"] = jsonData.status === \"CLOSED\"",
									"tests[\"Check Destination is DMS\"] = jsonData.destination === \"TEST\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "c163f63b-61d7-44a0-ad53-86d47ca86f85",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "List all Envelopes (back end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var envelopeId = postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check envelope ID present\"] = responseBody.has(envelopeId);",
									"",
									"var fileId = postman.getGlobalVariable(\"fileId\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var noOfEnvelopes = jsonData._embedded.envelopes.length;",
									"var x;",
									"for(x=0; x<noOfEnvelopes; x++) {",
									"    if (jsonData._embedded.envelopes[x].id === envelopeId) {",
									"        break;",
									"    }",
									"}",
									"",
									"tests[\"Check envelopeId is present is available\"] = jsonData._embedded.envelopes[x].id === envelopeId",
									"tests[\"Check Destination is TEST\"] = jsonData._embedded.envelopes[x].destination === \"TEST\"",
									"tests[\"Check file size is not 0\"] = jsonData._embedded.envelopes[x]._embedded.files[0].length !== 0",
									"",
									"var callbackUrl = jsonData._embedded.envelopes[x]._links.package.href;",
									"tests[\"Validate File Transfer Package callbackUrl\"] = callbackUrl === \"/file-transfer/envelopes/\" + envelopeId",
									"postman.setGlobalVariable(\"callbackUrl\", callbackUrl);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-transfer/envelopes",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Download Envelope ZIP (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code description is OK\"] = responseCode.name.has(\"OK\");",
									"",
									"var contentHeader = postman.getResponseHeader(\"Content-Disposition\");",
									"var fileName = contentHeader.substring(22, contentHeader.lastIndexOf('\"'))",
									"",
									"tests[\"Check filename is {envelopeId}.zip\"] = fileName === postman.getGlobalVariable(\"envelopeId\") + \".zip\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}{{callbackUrl}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File to Sealed Envelope (front-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 423\"] = responseCode.code === 423;",
									"tests[\"Status code name is Locked\"] = responseCode.name.has(\"Locked\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId2\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId2}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Yuan",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete file from sealed envelope (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 423\"] = responseCode.code === 423;",
									"tests[\"Status code name is Locked\"] = responseCode.name.has(\"Locked\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Rescan-disable_ClamAV_first",
			"description": "",
			"item": [
				{
					"name": "Get In progress files - check none exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body is empty\"] = responseBody === \"[]\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/files/inprogress",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a new Envelope (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/pdf\",\n        \"image/jpeg\",\n        \"text/xml\",\n        \"text/csv\",\n        \"application/xml\",\n        \"application/vnd.ms-excel\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File (front-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Yuan",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"type": "file",
									"src": "useravatar.jpg"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - check file quarantined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check file status quarantined\"] = jsonData.files[0].status === \"QUARANTINED\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "19b8abda-5405-455e-b764-b8ba84dd18e1",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Submit File Routing request (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"tests[\"Check location header contains resource URL\"] = locationHeader !== null",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"DMS\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - Status = SEALED",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check envelope is sealed\"] = jsonData.status === \"SEALED\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "b2aeb816-cf69-45df-b887-50a0198e8a92",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Get In progress files - check one exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"test envelope id is returned\"] = jsonData[0].envelopeId === postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"test file id is returned\"] = jsonData[0].fileId === postman.getGlobalVariable(\"fileId\");",
									"",
									"postman.setGlobalVariable(\"fileRefId\", jsonData[0]._id)"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/files/inprogress",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Rescan stuck file",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/scan/envelopes/{{envelopeId}}/files/{{fileId}}/{{fileRefId}} ",
						"method": "POST",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get In progress files - check none exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body is empty\"] = responseBody === \"[]\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/files/inprogress",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - STATUS = CLOSED",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check envelope is sealed\"] = jsonData.status === \"CLOSED\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "bcbb9e08-5b35-44b4-ad73-b2cb92eec0e6",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				}
			]
		},
		{
			"name": "Soft Delete",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/pdf\",\n        \"image/jpeg\",\n        \"text/xml\",\n        \"text/csv\",\n        \"application/xml\",\n        \"application/vnd.ms-excel\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File (front-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Yuan",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "3d7e970f-024f-4dcd-8d69-3b47dda0e367",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Soft Delete Envelope (back-end)",
					"request": {
						"url": "{{be-url}}/file-transfer/envelopes/{{envelopeId}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}