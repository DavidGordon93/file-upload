{
	"variables": [],
	"info": {
		"name": "File Upload Consumer Driven Contract Tests",
		"_postman_id": "e7505d9d-6719-3c7f-d4ef-e956018818a2",
		"description": "File Upload - Consumer Driven Contract Tests\n\nMake sure you attach a new file with every test as there is a bug with Postman - it looks as though a file is attached but it isn't\n\nNeed to get ClamAV installed to ensure virus scan works",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Cleanup - clear quaranantine",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12GB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File (front-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is CREATED\"] = responseCode.name.has(\"Created\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Craig",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file",
									"enabled": true
								},
								{
									"key": "foo",
									"value": "1",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "7b5f2073-9eb1-4efe-bded-184fac9095d5",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Submit File Routing request (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"tests[\"Check location header contains resource URL\"] = locationHeader !== null",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"DMS\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "List Envelopes (back end) copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var envelopeId = postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check envelope ID present\"] = responseBody.has(envelopeId);",
									"",
									"var fileId = postman.getGlobalVariable(\"fileId\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var noOfEnvelopes = jsonData._embedded.envelopes.length;",
									"var x;",
									"for(x=0; x<noOfEnvelopes; x++) {",
									"    if (jsonData._embedded.envelopes[x].id === envelopeId) {",
									"        break;",
									"    }",
									"}",
									"",
									"tests[\"Check envelopeId is present is available\"] = jsonData._embedded.envelopes[x].id === envelopeId",
									"tests[\"Check Destination is DMS\"] = jsonData._embedded.envelopes[x].destination === \"DMS\"",
									"tests[\"Check file size is not 0\"] = jsonData._embedded.envelopes[x]._embedded.files[0].length !== 0",
									"",
									"var callbackUrl = jsonData._embedded.envelopes[x]._links.package.href;",
									"tests[\"Validate File Transfer Package callbackUrl\"] = callbackUrl === \"/file-transfer/envelopes/\" + envelopeId",
									"postman.setGlobalVariable(\"callbackUrl\", callbackUrl);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-transfer/envelopes",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Download Envelope ZIP (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code description is OK\"] = responseCode.name.has(\"OK\");",
									"",
									"var contentHeader = postman.getResponseHeader(\"Content-Disposition\");",
									"var fileName = contentHeader.substring(22, contentHeader.lastIndexOf('\"'))",
									"",
									"tests[\"Check filename is {envelopeId}.zip\"] = fileName === postman.getGlobalVariable(\"envelopeId\") + \".zip\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}{{callbackUrl}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "recreate collections",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/test-only/recreate-collections",
						"method": "POST",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "889e5423-8fdb-49a3-a0a5-2b812c45ac67",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Download Envelope ZIP (back-end) copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code description is OK\"] = responseCode.name.has(\"OK\");",
									"",
									"var contentHeader = postman.getResponseHeader(\"Content-Disposition\");",
									"var fileName = contentHeader.substring(22, contentHeader.lastIndexOf('\"'))",
									"",
									"tests[\"Check filename is {envelopeId}.zip\"] = fileName === postman.getGlobalVariable(\"envelopeId\") + \".zip\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}{{callbackUrl}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete File from Sealed Envelope",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n\t\t\"text/xml\",\n    \t\"application/pdf\",\n    \t\"image/jpeg\",\n    \t\"application/xml\",\n    \t\"application/vnd.ms-excel\",\n    \t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"250MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File (front-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is CREATED\"] = responseCode.name.has(\"Created\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Craig",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file",
									"enabled": true
								},
								{
									"key": "foo",
									"value": "1",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve File Metadata (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code description is OK\"] = responseCode.name.has(\"OK\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}/files/{{fileId}}/metadata",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - Check Open and File Added",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check Env Status is OPEN\"] = jsonData.status === \"OPEN\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "9a164981-192e-4436-859e-8c8e991b0559",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Submit File Routing request (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"tests[\"Check location header contains resource URL\"] = locationHeader !== null",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"TEST\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - Check Sealed",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check Env Status is CLOSED\"] = jsonData.status === \"CLOSED\"",
									"tests[\"Check Destination is TEST\"] = jsonData.destination === \"TEST\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "2b9a28ff-03e9-4c4e-a6c1-eec9c99b3f59",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "List Envelopes (back end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var envelopeId = postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check envelope ID present\"] = responseBody.has(envelopeId);",
									"",
									"var fileId = postman.getGlobalVariable(\"fileId\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var noOfEnvelopes = jsonData._embedded.envelopes.length;",
									"var x;",
									"for(x=0; x<noOfEnvelopes; x++) {",
									"    if (jsonData._embedded.envelopes[x].id === envelopeId) {",
									"        break;",
									"    }",
									"}",
									"",
									"tests[\"Check envelopeId is present is available\"] = jsonData._embedded.envelopes[x].id === envelopeId",
									"tests[\"Check Destination is TEST\"] = jsonData._embedded.envelopes[x].destination === \"TEST\"",
									"tests[\"Check file size is not 0\"] = jsonData._embedded.envelopes[x]._embedded.files[0].length !== 0",
									"",
									"var callbackUrl = jsonData._embedded.envelopes[x]._links.package.href;",
									"tests[\"Validate File Transfer Package callbackUrl\"] = callbackUrl === \"/file-transfer/envelopes/\" + envelopeId",
									"postman.setGlobalVariable(\"callbackUrl\", callbackUrl);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-transfer/envelopes",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Download Envelope ZIP (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code description is OK\"] = responseCode.name.has(\"OK\");",
									"",
									"var contentHeader = postman.getResponseHeader(\"Content-Disposition\");",
									"var fileName = contentHeader.substring(22, contentHeader.lastIndexOf('\"'))",
									"",
									"tests[\"Check filename is {envelopeId}.zip\"] = fileName === postman.getGlobalVariable(\"envelopeId\") + \".zip\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}{{callbackUrl}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File to Sealed Envelope (front-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 423\"] = responseCode.code === 423;",
									"tests[\"Status code name is Locked\"] = responseCode.name.has(\"Locked\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId2\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId2}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Craig",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file",
									"enabled": true
								},
								{
									"key": "foo",
									"value": "1",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Delete file from sealed envelope (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 423\"] = responseCode.code === 423;",
									"tests[\"Status code name is Locked\"] = responseCode.name.has(\"Locked\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "E2E Smoke Test - Happy Path",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n\t\t\"text/xml\",\n    \t\"application/pdf\",\n    \t\"image/jpeg\",\n    \t\"application/xml\",\n    \t\"application/vnd.ms-excel\",\n    \t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"250MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File (front-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is CREATED\"] = responseCode.name.has(\"Created\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Craig",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file",
									"enabled": true
								},
								{
									"key": "foo",
									"value": "1",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve File Metadata (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code description is OK\"] = responseCode.name.has(\"OK\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}/files/{{fileId}}/metadata",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - Check Open and File Added",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check Env Status is OPEN\"] = jsonData.status === \"OPEN\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "e9d3c40c-8c82-4867-b9e7-5fb675e68903",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Submit File Routing request (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"tests[\"Check location header contains resource URL\"] = locationHeader !== null",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"TEST\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - Check Sealed",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check Env Status is CLOSED\"] = jsonData.status === \"CLOSED\"",
									"tests[\"Check Destination is TEST\"] = jsonData.destination === \"TEST\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "2a03cda3-71ad-4594-9161-f184a54ccfb5",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "List Envelopes (back end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var envelopeId = postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check envelope ID present\"] = responseBody.has(envelopeId);",
									"",
									"var fileId = postman.getGlobalVariable(\"fileId\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var noOfEnvelopes = jsonData._embedded.envelopes.length;",
									"var x;",
									"for(x=0; x<noOfEnvelopes; x++) {",
									"    if (jsonData._embedded.envelopes[x].id === envelopeId) {",
									"        break;",
									"    }",
									"}",
									"",
									"tests[\"Check envelopeId is present is available\"] = jsonData._embedded.envelopes[x].id === envelopeId",
									"tests[\"Check Destination is TEST\"] = jsonData._embedded.envelopes[x].destination === \"TEST\"",
									"tests[\"Check file size is not 0\"] = jsonData._embedded.envelopes[x]._embedded.files[0].length !== 0",
									"",
									"var callbackUrl = jsonData._embedded.envelopes[x]._links.package.href;",
									"tests[\"Validate File Transfer Package callbackUrl\"] = callbackUrl === \"/file-transfer/envelopes/\" + envelopeId",
									"postman.setGlobalVariable(\"callbackUrl\", callbackUrl);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-transfer/envelopes",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Download Envelope ZIP (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code description is OK\"] = responseCode.name.has(\"OK\");",
									"",
									"var contentHeader = postman.getResponseHeader(\"Content-Disposition\");",
									"var fileName = contentHeader.substring(22, contentHeader.lastIndexOf('\"'))",
									"",
									"tests[\"Check filename is {envelopeId}.zip\"] = fileName === postman.getGlobalVariable(\"envelopeId\") + \".zip\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}{{callbackUrl}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Emvelope Constraints - contentType",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope (back-end) - all supported types",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n\t\t\"application/pdf\",\n\t\t\"image/jpeg\",\n\t\t\"application/xml\",\n\t\t\"application/vnd.ms-excel\",\n\t\t\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "43a9dd9e-c0fc-4338-acab-654dea43a574",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				}
			]
		},
		{
			"name": "Envelope Constraints maxItems",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope - maxItems = 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 2,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Upload File (front-end) - 5MB or so (repeat x 3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name is OK\"] = responseCode.name.has(\"OK\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Craig",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file",
									"enabled": true
								},
								{
									"key": "foo",
									"value": "1",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Repeat this step 3 times"
					},
					"response": []
				},
				{
					"name": "Submit File Routing request (back-end) - negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name is Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message\"] = jsonData.error.msg === \"Envelope item count exceeds maximum of 2, actual: 3\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"TEST\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Envelope Constraints maxItems - default to 100",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope - maxItems missing",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\n\n"
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end)  - check maxItems = 100",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check maxItems defaults to 25MB\"] = jsonData.constraints.maxItems === 100;"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "1b9feba1-ae04-4b9e-9866-169a6df01a5d",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				}
			]
		},
		{
			"name": "Envelope Constraints maxItems - invalid maxItems",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope - maxItems = 101",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name has Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message correct\"] = jsonData.error.msg === \"constraints.maxItems must be between 1 and 100\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 101,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a new Envelope - maxItems = \"100\" (string)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name has Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message correct\"] = jsonData.error.msg === \"constraints.maxItems must be between 1 and 100\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : \"100\",\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a new Envelope - maxItems = \"100\" (string) copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name has Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message correct\"] = jsonData.error.msg === \"constraints.maxItems must be between 1 and 100\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : \"100\",\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Envelope Constraints maxItems - regression",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope - maxItems = 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 4,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\n"
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end)  - check maxItems = 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check maxItems = 4\"] = jsonData.constraints.maxItems === 4;"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "a9fb923e-aa64-4087-ad6b-c664158750d7",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Upload File (front-end) - 2.5MB or so (repeat x 3)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name is OK\"] = responseCode.name.has(\"OK\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Craig",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file",
									"enabled": true
								},
								{
									"key": "foo",
									"value": "1",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Repeat this step 3 times"
					},
					"response": []
				},
				{
					"name": "Submit File Routing request (back-end) - positive",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"tests[\"Check location header contains resource URL\"] = locationHeader !== null",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"TEST\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - Check Sealed",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check Env Status is CLOSED\"] = jsonData.status === \"CLOSED\"",
									"tests[\"Check Destination is DMS\"] = jsonData.destination === \"TEST\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "89bea555-3154-4150-9599-b98c909b1552",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "List Envelopes (back end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var envelopeId = postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check envelope ID present\"] = responseBody.has(envelopeId);",
									"",
									"var fileId = postman.getGlobalVariable(\"fileId\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"var noOfEnvelopes = jsonData._embedded.envelopes.length;",
									"var x;",
									"for(x=0; x<noOfEnvelopes; x++) {",
									"    if (jsonData._embedded.envelopes[x].id === envelopeId) {",
									"        break;",
									"    }",
									"}",
									"",
									"tests[\"Check envelopeId is present is available\"] = jsonData._embedded.envelopes[x].id === envelopeId",
									"tests[\"Check Destination is TEST\"] = jsonData._embedded.envelopes[x].destination === \"TEST\"",
									"tests[\"Check file size is not 0\"] = jsonData._embedded.envelopes[x]._embedded.files[0].length !== 0",
									"",
									"var callbackUrl = jsonData._embedded.envelopes[x]._links.package.href;",
									"tests[\"Validate File Transfer Package callbackUrl\"] = callbackUrl === \"/file-transfer/envelopes/\" + envelopeId",
									"postman.setGlobalVariable(\"callbackUrl\", callbackUrl);",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-transfer/envelopes",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Download Envelope ZIP (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code description is OK\"] = responseCode.name.has(\"OK\");",
									"",
									"var contentHeader = postman.getResponseHeader(\"Content-Disposition\");",
									"var fileName = contentHeader.substring(22, contentHeader.lastIndexOf('\"'))",
									"",
									"tests[\"Check filename is {envelopeId}.zip\"] = fileName === postman.getGlobalVariable(\"envelopeId\") + \".zip\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}{{callbackUrl}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Envelope Constraints maxSize",
			"description": "As a file-upload client \nI want to limit the size of an envelope that my customer can upload\nattribute : constraints.maxSize\n\n\n1. The maximum size of any envelope is 25MB\n2. If the value is not specified in the create envelope call it defaults to 25MB\n3. If the maxSize > 25MB results in an error response on create envelope.\n4. Accept KB|MB as prefix (regex ^[1-9][0-9]{0,3}(KB|MB)$ )",
			"item": [
				{
					"name": "Create a new Envelope - maxSize = 12MB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\nattribute : constraints.maxSize = 12MB\n\nEnvelope should be created successfully\n"
					},
					"response": []
				},
				{
					"name": "Create a new Envelope - maxSize = 1MB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"1MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\nattribute : constraints.maxSize = 1MB\n\nEnvelope should be created successfully\nUse should not be able to upload file > 1MB\n"
					},
					"response": []
				},
				{
					"name": "Upload File (front-end) - 5MB or so",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name is OK\"] = responseCode.name.has(\"OK\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Craig",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"type": "file",
									"enabled": true,
									"src": "1473167513.pdf"
								},
								{
									"key": "foo",
									"value": "1",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Upload should be rejected"
					},
					"response": []
				},
				{
					"name": "Submit File Routing request (back-end) - positive",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"tests[\"Check location header contains resource URL\"] = locationHeader !== null",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"TEST\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Submit File Routing request (back-end) - negative",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name is Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message\"] = jsonData.error.msg === \"Envelope size exceeds maximum of 1.00 MB\"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"TEST\"\n}"
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "Envelope Constraints maxSize - default to 25MB",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope - maxSize defaults to 25MB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\nattribute : constraints.maxSize missing\n\nEnvelope should be created successfully and default to 25MB\n"
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end)  - check maxSize = 25MB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check maxSize defaults to 25MB\"] = jsonData.constraints.maxSize === 26214400;"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "5c83aa6f-be23-4512-b30b-5299ee49083b",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				}
			]
		},
		{
			"name": "Envelope Constraints maxSize - invalid maxSize",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope - maxSize missing quantity results in error",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name has Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message correct\"] = jsonData.error.msg === \"obj.constraints.maxSize --> Unable to parse `\\\"12\\\"` as size, expected format is up to four digits followed by KB or MB, e.g. 1024KB\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\n\n"
					},
					"response": []
				},
				{
					"name": "Create a new Envelope - maxSize > 25MB results in error",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name has Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message correct\"] = jsonData.error.msg === \"constraints.maxSize exceeds maximum allowed value of 25.00 MB\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"26MB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\n\n"
					},
					"response": []
				},
				{
					"name": "Create a new Envelope - maxSize invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name has Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message correct\"] = jsonData.error.msg === \"obj.constraints.maxSize --> Unable to parse `\\\"1024B\\\"` as size, expected format is up to four digits followed by KB or MB, e.g. 1024KB\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"1024B\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Envelope Constraints maxSizePerItem - default to 10MB",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope - maxSize defaults to 25MB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"8MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\nattribute : constraints.maxSize missing\n\nEnvelope should be created successfully and default to 25MB\n"
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end)  - check maxSizePerItem = 10MB",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"",
									"tests[\"Check maxSizePerItem defaults to 10MB\"] = jsonData.constraints.maxSizePerItem === 10485760;"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "6e5b4f36-7562-4358-9603-1e279529e888",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				}
			]
		},
		{
			"name": "Envelope Constraints maxSizePerItem - invalid maxSizePerItem",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope - maxSizePerItem missing quantity results in error",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name has Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message correct\"] = jsonData.error.msg === \"obj.constraints.maxSizePerItem --> Unable to parse `\\\"10\\\"` as size, expected format is up to four digits followed by KB or MB, e.g. 1024KB\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"10\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\n\n"
					},
					"response": []
				},
				{
					"name": "Create a new Envelope - maxSizePerItem > 10MB results in error",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name has Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message correct\"] = jsonData.error.msg === \"constraints.maxSizePerItem exceeds maximum allowed value of 10.00 MB\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"11MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\n\n"
					},
					"response": []
				},
				{
					"name": "Create a new Envelope - maxSizePerItem invalid",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"tests[\"Status code name has Bad Request\"] = responseCode.name.has(\"Bad Request\");",
									"",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check error message correct\"] = jsonData.error.msg === \"obj.constraints.maxSizePerItem --> Unable to parse `\\\"1024B\\\"` as size, expected format is up to four digits followed by KB or MB, e.g. 1024KB\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12MB\",\n    \"maxSizePerItem\" : \"1024B\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": "\n\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "Rescan",
			"description": "",
			"item": [
				{
					"name": "Get In progress files - check none exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body is empty\"] = responseBody === \"[]\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/files/inprogress",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Create a new Envelope (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12GB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File (front-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is CREATED\"] = responseCode.name.has(\"Created\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Craig",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file",
									"enabled": true
								},
								{
									"key": "foo",
									"value": "1",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - check file quarantined",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check file status quarantined\"] = jsonData.files[0].status === \"QUARANTINED\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "d4273f31-3066-4be0-aa19-8469d26deacd",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Submit File Routing request (back-end)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"tests[\"Check location header contains resource URL\"] = locationHeader !== null",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-routing/requests",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"envelopeId\": \"{{envelopeId}}\",\n    \"application\" : \"application:ABCD/1.2.33\",\n    \"destination\": \"DMS\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - Status = SEALED",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check envelope is sealed\"] = jsonData.status === \"SEALED\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "6ce6988b-612d-4589-adcf-a7ec63b0d009",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Get In progress files - check one exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"test envelope id is returned\"] = jsonData[0].envelopeId === postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"test file id is returned\"] = jsonData[0].fileId === postman.getGlobalVariable(\"fileId\");",
									"",
									"postman.setGlobalVariable(\"fileRefId\", jsonData[0]._id)"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/files/inprogress",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Rescan stuck file",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/scan/envelopes/{{envelopeId}}/files/{{fileId}}/{{fileRefId}} ",
						"method": "POST",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Get In progress files - check none exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Status code name has string\"] = responseCode.name.has(\"OK\");",
									"tests[\"Body is empty\"] = responseBody === \"[]\";"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/files/inprogress",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) - STATUS = CLOSED",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");",
									"tests[\"Check envelope is sealed\"] = jsonData.status === \"CLOSED\""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "d7525310-7201-46d2-aeb1-ae8a9b07339f",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				}
			]
		},
		{
			"name": "Soft Delete",
			"description": "",
			"item": [
				{
					"name": "Create a new Envelope (back-end) copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name has Created\"] = responseCode.name.has(\"Created\");",
									"",
									"var locationHeader = postman.getResponseHeader(\"Location\");",
									"var envelopeId = locationHeader.substring(locationHeader.lastIndexOf('/')+1)",
									"tests[\"Location Header contains Envelope ID\"] = envelopeId !== null",
									"postman.setGlobalVariable(\"envelopeId\", envelopeId);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes",
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer XXXXXXXXXXXX",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": " {\n  \"constraints\" : {\n    \"contentTypes\" : [\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.oasis.opendocument.spreadsheet\"\n    ],\n    \"maxItems\" : 100,\n    \"maxSize\" : \"12GB\",\n    \"maxSizePerItem\" : \"10MB\"\n  },\n  \"processing\" : {\n    \"antiVirus\" : \"block\",\n    \"nonRepudiation\" : \"none\",\n    \"package\" : \"none\",\n    \"activeContent\": \"remove\"\n  },\n  \"callbackUrl\" : \"http://absolute.callback.url\",\n  \"expiryDate\": \"2016-04-07T13:15:30Z\",\n  \"metadata\" : {\n      \"anything\": \"the caller wants to add to the envelope\"\n  }\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Upload File (front-end) copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"tests[\"Status code name is CREATED\"] = responseCode.name.has(\"Created\");"
								]
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var timestamp = Date.now()",
									"postman.setGlobalVariable(\"fileId\", timestamp);"
								]
							}
						}
					],
					"request": {
						"url": "{{fe-url}}/file-upload/upload/envelopes/{{envelopeId}}/files/{{fileId}}",
						"method": "POST",
						"header": [
							{
								"key": "X-Requested-With",
								"value": "Craig",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file1",
									"value": "",
									"type": "file",
									"enabled": true
								},
								{
									"key": "foo",
									"value": "1",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "Retrieve Envelope details (back-end) copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Check envelope ID returned\"] = jsonData.id === postman.getGlobalVariable(\"envelopeId\");"
								]
							}
						}
					],
					"request": {
						"url": "{{be-url}}/file-upload/envelopes/{{envelopeId}}",
						"method": "GET",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": [
						{
							"id": "e1749b77-e427-42a3-b5d0-87ae75562201",
							"name": "Success",
							"originalRequest": {
								"url": "{{url}}/file-upload/envelopes/{{locationHeader}}",
								"method": "GET",
								"header": [],
								"body": {}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "javascript",
							"_postman_previewtype": "html",
							"header": [
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "464",
									"description": "The length of the response body in octets (8-bit bytes)"
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": "The mime type of this content"
								}
							],
							"cookie": [],
							"responseTime": 30,
							"body": "{\"_id\":\"0e17bd50-9993-45a3-9533-2a71f7a278a7\",\"constraints\":{\"contentTypes\":[\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\"application/vnd.oasis.opendocument.spreadsheet\"],\"maxItems\":100,\"maxSize\":\"12GB\",\"maxSizePerItem\":\"10MB\"},\"callbackUrl\":\"http://absolute.callback.url\",\"expiryDate\":1467893730000,\"metadata\":{\"anything\":\"the caller wants to add to the envelope\"}}"
						}
					]
				},
				{
					"name": "Soft Delete Envelope (back-end)",
					"request": {
						"url": "{{be-url}}/file-transfer/envelopes/{{envelopeId}}",
						"method": "DELETE",
						"header": [],
						"body": {},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}